% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visibility.R
\name{visibility_graph}
\alias{visibility_graph}
\title{Compute a Visibility Graph from Time-Series Data}
\usage{
visibility_graph(
  data,
  method = "nvg",
  directed = FALSE,
  limit,
  penetrable = 0,
  decay_factor = 0
)
}
\arguments{
\item{data}{[\code{tsn}, \code{ts}, \code{data.frame}, \code{numeric()}]\cr Time-series data.}

\item{method}{[\code{character(1)}]\cr The visibility graph construction
method. The options are \code{"nvg"} for natural visibility graphs and
\code{"hvg"} for horizontal visibility graphs.}

\item{directed}{[\code{logical(1)}]\cr Should the graph be a directed graph?
If \code{TRUE}, edges have direction showing temporal order.
The default is \code{FALSE}.}

\item{limit}{[\code{integer(1)}]\cr Maximum temporal distance (in time steps)
for visibility connections. If not provided (default), no limit is applied.}

\item{penetrable}{[\code{integer(1)}]\cr Number of points allowed to penetrate
the visibility line for Limited Penetrable Visibility Graphs (LPVG).
The default is 0 (standard visibility graph).}

\item{decay_factor}{[\code{numeric(1)}]\cr Temporal decay factor of
edge weights. The default is 0 (no decay). Higher values cause faster
decay with increasing temporal distance.}
}
\value{
A \code{matrix} of edge weights.
}
\description{
Creates visibility graphs from time series data, where nodes represent time
points and edges represent visibility between points according to the
selected method. The function supports both Natural Visibility Graphs (NVG)
and Horizontal Visibility Graphs (HVG), with options for limited penetrable
visibility and temporal decay.
}
\details{
\subsection{Visibility Graph Methods}{

\strong{Natural Visibility Graph (NVG):} Two points can "see" each other if
a straight line connecting them doesn't intersect with any intermediate
points. This preserves more geometric information from the original time
series.

\strong{Horizontal Visibility Graph (HVG):}  Two points can "see" each other if
all intermediate points are strictly lower than both endpoints. This creates
sparser graphs that capture different temporal patterns.
}

\subsection{Advanced Features}{

\strong{Limited Penetrable Visibility (LPVG):} Allows a specified number of
points to penetrate the visibility line, creating more connected graphs.

\strong{Temporal Decay:} Edge weights decrease exponentially with temporal
distance, emphasizing local temporal relationships.
}
}
\examples{
set.seed(123)
ts_data <- rnorm(50, mean = 50, sd = 15)

# Create natural visibility graph
nvg <- visibility_graph(ts_data, method = "nvg")

# Create horizontal visibility graph with temporal limit
hvg <- visibility_graph(ts_data, method = "hvg", limit = 10)

}
\references{
Lacasa, L., Luque, B., Ballesteros, F., Luque, J., & NuÃ±o, J. C. (2008).
From time series to complex networks: The visibility graph.
\emph{PNAS}, \strong{105(13)}, 4972-4975.

Luque, B., Lacasa, L., Ballesteros, F., & Luque, J. (2009).
Horizontal visibility graphs: Exact results for random time series.
\emph{Physical Review E}, \strong{80(4)}, 046103.
}

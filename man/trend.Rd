% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trend.R
\name{trend}
\alias{trend}
\title{Compute trend classification based on various metrics}
\usage{
trend(
  data,
  window,
  method = "slope",
  slope = "robust",
  epsilon = 0.05,
  turbulence_threshold = 5,
  flat_to_turbulent_factor = 1.5,
  align = "center"
)
}
\arguments{
\item{data}{[\code{tsn}, \code{ts}, \code{data.frame}, \code{numeric()}]\cr Time-series data.}

\item{window}{[\code{integer(1)}]\cr The window size for metric calculation.
If missing, uses the following adaptive sizing:
\code{max(3, min(length(data), round(length(data)/10)))}.}

\item{method}{[\code{character(1)}]\cr The method for trend calculation.
The available options ares: \code{"slope"} (default) and \code{"growth_factor"}.}

\item{slope}{[\code{character(1)}]\cr The method for slope calculation for
\code{method = "slope"}. The available options are:
\code{"ols"} (ordinary least squares), \code{"robust"} (Theil-Sen estimator),
\code{"spearman"} (Spearman rank correlation based),
and \code{"kendall"} (Kendall's tau based). Default: \code{"robust"}.}

\item{epsilon}{[\code{numeric(1)}]\cr A threshold value for defining flat trends
based on the metric value. For \code{method = "slope"}, values between
\verb{(-epsilon, +epsilon)} are considered flat. For \code{"growth_factor"}, values
between \code{(1-epsilon)} and \code{(1+epsilon)} are considered flat.
Default: \code{0.05}.}

\item{turbulence_threshold}{[\code{numeric(1)}]\cr The baseline threshold value
for classifying a segment as "turbulent". Based on a custom combined
volatility metric (CV + 0.5 * range factor of rolling metric values).
Default: 5.}

\item{flat_to_turbulent_factor}{[\code{numeric(1)}]\cr A multiplier for
\code{turbulence_threshold} when assessing if an already "flat" segment should
be reclassified as "turbulent". A value > 1 makes "flat" trends more
resistant to becoming "turbulent". Default: 1.5.}

\item{align}{[\code{character(1)}]\cr Alignment of the window. The available
options are: \code{"center"} (default), \code{"right"}, and \code{"left"}. The calculated
metric is assigned to the center, rightmost, or leftmost point of the
window, respectively.}
}
\value{
A \code{tsn} object with an added \code{trend} column for the \code{timeseries}
data with the following classes: \code{"ascending"}, \code{"descending"}, \code{"flat"},
\code{"turbulent"}, \code{"Missing_Data"}, or \code{"Initial"}.
}
\description{
Calculates rolling metrics for a time series and classifies trends
as ascending, descending, flat, or turbulent.
}
\details{
Computes rolling metrics. Trend classifications
("ascending", "descending", "flat") are first determined using \code{epsilon}.
Then, a "turbulent" classification can override these if the rolling
volatility of the metric exceeds a dynamically adjusted turbulence threshold.
For segments initially classified as "flat", this threshold is
\code{turbulence_threshold * flat_to_turbulent_factor},
making them more stable against reclassification as "turbulent" due to minor
noise.
}
\examples{
set.seed(123)
x <- cumsum(rnorm(200)) # Longer series to see more varied trends
# Using a slightly larger epsilon to catch more "flat" regions
tr <- trend(
  x, window = 15, method = "slope",
  slope = "ols", epsilon = 0.1,
  turbulence_threshold = 5, flat_to_turbulent_factor = 2
)

}
